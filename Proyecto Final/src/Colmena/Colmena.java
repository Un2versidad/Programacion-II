package Colmena;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import static Colmena.Utilidades.printWithDelay;

public class Colmena implements Serializable {
    // Identificador √∫nico de la colmena.
    public String id;
    
    // Ubicaci√≥n geogr√°fica de la colmena (por ejemplo, granja o apiario).
    public String ubicacion;
    
    // Estado de salud de la colmena: "Buena", "Regular", "Mala".
    public String estadoSalud;
    
    // Cantidad de abejas dentro de la colmena.
    public int cantidadAbejas;
    
    // Cantidad de miel producida por la colmena (en kilogramos).
    public double produccionMiel;
    
    // Informaci√≥n sobre la abeja reina asociada a esta colmena.
    public AbejaReina abejaReina;
    
    // Lista de inspecciones realizadas a la colmena, registradas cronol√≥gicamente.
    public List<Inspeccion> inspecciones;

    // Constructor de la colmena. Se inicializan los valores b√°sicos y la lista de inspecciones.
    public Colmena(String id, String ubicacion, String estadoSalud, int cantidadAbejas, double produccionMiel) {
        this.id = id;
        this.ubicacion = ubicacion;
        this.estadoSalud = estadoSalud;
        this.cantidadAbejas = cantidadAbejas;
        this.produccionMiel = produccionMiel;
        this.inspecciones = new ArrayList<>();  // Inicializamos la lista de inspecciones vac√≠a.
    }

    // M√©todo para asignar una abeja reina a la colmena.
    public void agregarAbejaReina(AbejaReina abejaReina) {
        this.abejaReina = abejaReina;
    }

    // M√©todo para agregar una nueva inspecci√≥n al historial de la colmena.
    public void agregarInspeccion(Inspeccion inspeccion) {
        inspecciones.add(inspeccion);  // A√±adimos la inspecci√≥n al final de la lista.
    }

    // M√©todo para editar los datos de un apicultor existente.
    // Permite cambiar el nombre o el tel√©fono del apicultor.
    public static void editarApicultor(Apicultor apicultor, List<Apicultor> apicultores) {
        printWithDelay("""
    üìù ¬øQu√© deseas editar?
    1. Nombre
    2. Tel√©fono
    """, 50);
        String opcion = Utilidades.getValidInput("Selecciona una opci√≥n: ", "[1-2]");
        switch (opcion) {
            case "1" -> {
                // Se actualiza el nombre del apicultor.
                apicultor.nombre = Utilidades.getValidInput("üßë‚Äçüåæ Nuevo nombre: ", ".+");
                printWithDelay("‚úÖ Nombre actualizado.\n", 50);
            }
            case "2" -> {
                // Se actualiza el tel√©fono si es v√°lido y no existe ya en otro apicultor.
                String nuevoTelefono = Utilidades.getValidInput("üìû Nuevo tel√©fono (10 d√≠gitos): ", "\\d{10}");
                boolean telefonoExistente = apicultores.stream().anyMatch(a -> a.telefono != null && a.telefono.equals(nuevoTelefono) && !a.equals(apicultor));

                if (telefonoExistente) {
                    // Si el tel√©fono ya est√° registrado, mostramos un mensaje de error.
                    printWithDelay("\n‚ö†Ô∏è El tel√©fono " + nuevoTelefono + " ya est√° registrado por otro apicultor. Intenta con otro n√∫mero.", 50);
                } else {
                    apicultor.telefono = nuevoTelefono;  // Actualizamos el tel√©fono.
                    printWithDelay("‚úÖ Tel√©fono actualizado.\n", 50);
                }
            }
            default -> printWithDelay("‚ö†Ô∏è Opci√≥n no v√°lida. No se realizaron cambios.\n", 50);
        }
    }

    // M√©todo para editar los datos de la colmena. Permite cambiar la ubicaci√≥n, estado de salud, cantidad de abejas o producci√≥n de miel.
    public static void editarColmena(Colmena colmena) {
        printWithDelay("""
        üìù ¬øQu√© deseas editar?
        1. Ubicaci√≥n
        2. Estado de Salud
        3. Cantidad de Abejas
        4. Producci√≥n de Miel
        """, 50);
        String opcion = Utilidades.getValidInput("Selecciona una opci√≥n: ", "[1-4]");
        switch (opcion) {
            case "1" -> {
                // Se actualiza la ubicaci√≥n de la colmena.
                colmena.ubicacion = Utilidades.getValidInput("üìç Nueva ubicaci√≥n: ", ".+");
                printWithDelay("‚úÖ Ubicaci√≥n actualizada.\n", 50);
            }
            case "2" -> {
                // Se actualiza el estado de salud de la colmena.
                colmena.estadoSalud = Utilidades.getValidInput("‚ù§Ô∏è Nuevo estado de salud (Buena/Regular/Mala): ", "Buena|Regular|Mala");
                printWithDelay("‚úÖ Estado de salud actualizado.\n", 50);
            }
            case "3" -> {
                // Se actualiza la cantidad de abejas.
                colmena.cantidadAbejas = Integer.parseInt(Utilidades.getValidInput("üêù Nueva cantidad de abejas: ", "[1-9]\\d*"));
                printWithDelay("‚úÖ Cantidad de abejas actualizada.\n", 50);
            }
            case "4" -> {
                // Se actualiza la producci√≥n de miel en kilogramos.
                colmena.produccionMiel = Double.parseDouble(Utilidades.getValidInput("üçØ Nueva producci√≥n de miel (kg): ", "^(?!0(\\.0+)?$)(\\d+(\\.\\d+)?|\\.\\d+)$"));
                printWithDelay("‚úÖ Producci√≥n de miel actualizada.\n", 50);
            }
            default -> printWithDelay("‚ö†Ô∏è Opci√≥n no v√°lida. No se realizaron cambios.\n", 50);
        }
    }

    // M√©todo para mostrar informaci√≥n detallada de una colmena, incluyendo datos de la colmena, la abeja reina y las inspecciones.
    public void mostrarInfo(int numeroColmena, Map<String, Apicultor> asignaciones) {
        StringBuilder colmenaInfo = new StringBuilder();
        // Agregamos la informaci√≥n b√°sica de la colmena (ID, ubicaci√≥n, estado de salud, cantidad de abejas y miel).
        colmenaInfo.append(String.format("""
        \r===============================
        # Colmena %d
        ===============================
        üêù ID: %s
        üìç Ubicaci√≥n: %s
        ‚ù§Ô∏è Estado de Salud: %s
        üêù Cantidad de Abejas: %d
        üçØ Producci√≥n de Miel: %.2f kg
        """, numeroColmena, id, ubicacion, estadoSalud, cantidadAbejas, produccionMiel)).append("\n");

        // Si existe una abeja reina, mostramos su informaci√≥n.
        if (abejaReina != null) {
            colmenaInfo.append("üëë Informaci√≥n de la Abeja Reina:").append("\n");
            colmenaInfo.append(abejaReina.getInfo()).append("\n");
        }

        // Si la colmena tiene un apicultor asignado, mostramos su informaci√≥n.
        if (asignaciones.containsKey(id)) {
            Apicultor apicultor = asignaciones.get(id);
            colmenaInfo.append(String.format("üßë‚Äçüåæ Apicultor Asignado: %s (Tel: %s)\n", apicultor.nombre, apicultor.telefono)).append("\n");
        }

        // Si la colmena tiene inspecciones registradas, las mostramos. Si no, indicamos que no hay inspecciones.
        if (!inspecciones.isEmpty()) {
            colmenaInfo.append("üìú Historial de Inspecciones:").append("\n");
            colmenaInfo.append(Inspeccion.getInfo(inspecciones, 1)).append("\n");
        } else {
            colmenaInfo.append("‚ö†Ô∏è No hay inspecciones registradas para esta colmena.\n");
        }
        // Mostramos toda la informaci√≥n construida.
        System.out.println(colmenaInfo);
    }
}
